{"version":3,"sources":["../../src/common/Game.js"],"names":["Room","name","width","height","paths","lobby","house","SCREEN_WIDTH","SCREEN_HEIGHT","MAP_WIDTH","MAP_HEIGHT","CHAR_RADIUS","PADDING","FLAG_RADIUS","Character","gameEngine","options","props","randomColor","Math","floor","random","toString","color","emote","other","velocity","percent","Object","assign","type","BaseTypes","TYPES","STRING","DynamicObject","Flag","pastCharacters","Game","physicsEngine","SimplePhysicsEngine","on","gameLogic","bind","serverSideInit","serverSidePlayerJoined","serverSidePlayerDisconnected","clientSideInit","clientSideDraw","serializer","registerClass","characters","world","queryObjects","instanceType","flags","character","position","y","x","flag","sqrt","inputData","playerId","queryObject","input","addObjectToWorld","TwoVector","flag2","ev","removeObjectFromWorld","console","log","controls","KeyboardControls","renderer","clientEngine","bindKey","repeat","document","getElementById","addEventListener","sendInput","updateOtherCharacters","el","obj","clientEl","clientObj","getElementsByClassName","innerText","parseInt","style","top","slice","left","updateFlag","background","updateClientCharacter","map","clientPlayer","difference","filter","indexOf","dif","remove","newPlayer","createElement","id","className","marginLeft","marginTop","zIndex","playerEmote","appendChild","newFlag","borderRadius","flagText","GameEngine"],"mappings":"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","sourcesContent":["import { GameEngine, BaseTypes, DynamicObject, SimplePhysicsEngine, TwoVector, KeyboardControls } from 'lance-gg';\n\nclass Room {\n    constructor(name, width, height, paths){\n        this.name = name;\n        this.width = width;\n        this.height = height;\n        this.paths = paths;\n    }\n}\n\nconst lobby = new Room(\"/lobby\", 1200, 1200, {'/house': {'x': 715, 'y': 140}});\nconst house = new Room(\"/house\", 400, 400, {'/lobby': {'x': 200, 'y': 390}});\n\n\n// /////////////////////////////////////////////////////////\n//\n// GAME OBJECTS\n//\n// /////////////////////////////////////////////////////////\n\n//SIZE CONSTANTS\nconst SCREEN_WIDTH = 400;\nconst SCREEN_HEIGHT = 400;\nconst MAP_WIDTH = 1200;\nconst MAP_HEIGHT = 1200;\n\nconst CHAR_RADIUS = 10;\nconst PADDING = CHAR_RADIUS*0.75;\n\nconst FLAG_RADIUS = 20;\n\n\nclass Character extends DynamicObject {\n\n    constructor(gameEngine, options, props) {\n        super(gameEngine, options, props);\n\n        var randomColor = \"#\" + Math.floor(Math.random()*16777215).toString(16);\n        this.color = randomColor;\n        this.emote = \"\";\n    }\n\n    // avoid gradual synchronization of velocity\n    get bending() {\n        return { velocity: { percent: 0.0 } };\n    }\n\n    static get netScheme() {\n        return Object.assign({\n            color: { type: BaseTypes.TYPES.STRING },\n            emote: {type: BaseTypes.TYPES.STRING}\n        }, super.netScheme);\n    }\n\n    syncTo(other) {\n        super.syncTo(other);\n        this.color = other.color;\n        this.emote = other.emote;\n    }\n}\n\nclass Flag extends DynamicObject {\n\n    constructor(gameEngine, options, props) {\n        super(gameEngine, options, props);\n        this.color = \"#ffffff\";\n    }\n\n    static get netScheme() {\n        return Object.assign({\n            color: { type: BaseTypes.TYPES.STRING }\n        }, super.netScheme);\n    }\n\n    syncTo(other) {\n        super.syncTo(other);\n        this.color = other.color;\n    }\n\n}\n\n\n// /////////////////////////////////////////////////////////\n//\n// GAME ENGINE\n//\n// /////////////////////////////////////////////////////////\n\nvar pastCharacters;\n\nexport default class Game extends GameEngine {\n\n    constructor(options) {\n        super(options);\n        this.physicsEngine = new SimplePhysicsEngine({ gameEngine: this });\n\n        // common code\n        this.on('postStep', this.gameLogic.bind(this));\n\n        // server-only code\n        this.on('server__init', this.serverSideInit.bind(this));\n        this.on('server__playerJoined', this.serverSidePlayerJoined.bind(this));\n        this.on('server__playerDisconnected', this.serverSidePlayerDisconnected.bind(this));\n\n        // client-only code\n        this.on('client__rendererReady', this.clientSideInit.bind(this));\n        this.on('client__draw', this.clientSideDraw.bind(this));\n    }\n\n    registerClasses(serializer) {\n        serializer.registerClass(Character);\n        serializer.registerClass(Flag);\n    }\n\n    gameLogic() {\n        \n        let characters = this.world.queryObjects({ instanceType: Character });\n        let flags = this.world.queryObjects({ instanceType: Flag });\n\n        if (!characters) return;\n        \n        //Test boundaries for each character\n        for (const character of characters) {\n            if (character.position.y < PADDING) {\n                character.position.y = PADDING;\n            } else if (character.position.y > MAP_HEIGHT - PADDING) {\n                character.position.y = MAP_HEIGHT - PADDING;\n            }\n\n            if (character.position.x < PADDING) {\n                character.position.x = PADDING;\n            } else if (character.position.x > MAP_WIDTH - PADDING) {\n                character.position.x = MAP_WIDTH - PADDING;\n            }\n\n            for (const flag of flags) {\n                if (Math.sqrt((character.position.x - flag.position.x)*(character.position.x - flag.position.x) + (character.position.y - flag.position.y)*(character.position.y - flag.position.y)) <= FLAG_RADIUS) {\n                    flag.color = character.color;\n                }\n            }\n\n\n        }\n    }\n\n    processInput(inputData, playerId) {\n        super.processInput(inputData, playerId);\n    \n        let character = this.world.queryObject({ playerId });\n\n        // bind arrows to movement\n        if (character) {\n            if (inputData.input === 'up') {\n                character.position.y -= 5;\n            } else if (inputData.input === 'down') {\n                character.position.y += 5;\n            }\n\n            if (inputData.input === 'left') {\n                character.position.x -= 5;\n            } else if (inputData.input === 'right') {\n                character.position.x += 5;\n            }\n\n            // bind space to boolean character status\n            if (inputData.input === 'heart') {\n                character.emote = \"<3\";\n            } else if (inputData.input === 'smile') {\n                character.emote = \":)\";\n            } else if (inputData.input === 'frown') {\n                character.emote = \":(\";\n            } else {\n                character.emote = \" \";\n            }\n        }\n    }\n\n\n    // /////////////////////////////////////////////////////////\n    //\n    // SERVER ONLY CODE\n    //\n    // /////////////////////////////////////////////////////////\n    serverSideInit() {\n        //this.renderer.serverEngine.createRoom(house.name);\n\n        let flag = this.addObjectToWorld(new Flag(this, null, {position: new TwoVector(Math.random()*MAP_WIDTH,Math.random()*MAP_HEIGHT)}));\n        let flag2 = this.addObjectToWorld(new Flag(this, null, {position: new TwoVector(Math.random()*MAP_WIDTH,Math.random()*MAP_HEIGHT)}));\n    }\n\n    serverSidePlayerJoined(ev) {\n        let character = this.addObjectToWorld(new Character(this,null, { position: new TwoVector(SCREEN_WIDTH/2, SCREEN_HEIGHT/2)}));\n        character.playerId = ev.playerId;\n    }\n\n    serverSidePlayerDisconnected(ev) {\n        let character = this.world.queryObject({playerId: ev.playerId});\n        this.removeObjectFromWorld(character);\n    }\n\n\n    // /////////////////////////////////////////////////////////\n    //\n    // CLIENT ONLY CODE\n    //\n    // /////////////////////////////////////////////////////////\n    clientSideInit() {\n        console.log(this);\n\n        this.controls = new KeyboardControls(this.renderer.clientEngine);\n        this.controls.bindKey('up', 'up', { repeat: true } );\n        this.controls.bindKey('down', 'down', { repeat: true } );\n        this.controls.bindKey('left','left', { repeat: true } );\n        this.controls.bindKey('right','right', { repeat: true } );\n\n        document.getElementById(\"button-1\").addEventListener(\"click\", () => {\n            this.renderer.clientEngine.sendInput(\"heart\");\n        });\n        document.getElementById(\"button-2\").addEventListener(\"click\", () => {\n            this.renderer.clientEngine.sendInput(\"smile\");\n        });\n        document.getElementById(\"button-3\").addEventListener(\"click\", () => {\n            this.renderer.clientEngine.sendInput(\"frown\");\n        });\n    }\n\n\n\n    \n    clientSideDraw() {\n\n        // draw other characters relative to the client's character\n        function updateOtherCharacters(el, obj, clientEl, clientObj) {\n\n            if (obj.emote) {\n                el.getElementsByClassName(\"emote\")[0].innerText = obj.emote;\n            }\n\n            var y = obj.position.y - clientObj.position.y + parseInt(clientEl.style.top.slice(0,-2));\n            var x = obj.position.x - clientObj.position.x + parseInt(clientEl.style.left.slice(0,-2));\n\n            el.style.top = y  + 'px';\n            el.style.left = x + 'px';\n        }\n\n        function updateFlag(el, obj, clientEl, clientObj) {\n            var y = obj.position.y - clientObj.position.y + parseInt(clientEl.style.top.slice(0,-2));\n            var x = obj.position.x - clientObj.position.x + parseInt(clientEl.style.left.slice(0,-2));\n\n            el.style.top = y  + 'px';\n            el.style.left = x + 'px';\n            el.style.background = obj.color;\n        }\n\n        // draw current view by moving the map unless at the edges (scrolling effect)\n        function updateClientCharacter(el, obj) {\n\n            if (obj.emote) {\n                el.getElementsByClassName(\"emote\")[0].innerText = obj.emote;\n            }\n\n            var map = document.getElementById(\"map\");\n            if (!map) {\n                \n            }\n\n            if (obj.position.x >= MAP_WIDTH-SCREEN_WIDTH/2) {\n                el.style.left = SCREEN_WIDTH - (MAP_WIDTH - obj.position.x) + \"px\";\n            } else if (obj.position.x <= SCREEN_WIDTH/2) {\n                el.style.left = obj.position.x + \"px\";\n            } else {\n                map.style.left = \"-\" + (obj.position.x - SCREEN_WIDTH/2) + \"px\";\n            }\n\n            if (obj.position.y >= MAP_HEIGHT-SCREEN_HEIGHT/2) {\n                el.style.top = SCREEN_HEIGHT - (MAP_HEIGHT - obj.position.y) + \"px\";\n            } else if (obj.position.y <= SCREEN_HEIGHT/2) {\n                el.style.top = obj.position.y + \"px\";\n            } else {\n                map.style.top = \"-\" + (obj.position.y - SCREEN_HEIGHT/2);\n            }\n        }\n\n        \n        // query character objects\n        let characters = this.world.queryObjects({ instanceType: Character });   \n        if (!characters) return;\n\n        let clientPlayer = this.world.queryObject({ playerId: this.playerId });   \n        if (!clientPlayer) return;\n        console.log(clientPlayer);\n\n        let flags = this.world.queryObjects({ instanceType: Flag});\n\n        // remove disconnected characters from the DOM\n        if (pastCharacters) {\n            var difference = pastCharacters.filter(x => characters.indexOf(x) === -1);\n\n            for (const dif of difference) {\n                document.getElementById(dif.playerId).remove();\n            }\n        }\n\n        pastCharacters = characters;\n\n        // render each character\n        for (const character of characters) {\n            // if not on DOM yet, create the chracter\n            if (!document.getElementById(character.playerId)){\n                let newPlayer = document.createElement(\"div\");\n                newPlayer.id = character.playerId;\n                newPlayer.className = \"character\";\n                newPlayer.style.height = CHAR_RADIUS + \"px\";\n                newPlayer.style.width = CHAR_RADIUS + \"px\";\n                newPlayer.style.background = character.color;\n                newPlayer.style.position = \"absolute\";\n                newPlayer.style.top = SCREEN_HEIGHT/2 + \"px\";\n                newPlayer.style.left = SCREEN_WIDTH/2 + \"px\";\n                newPlayer.style.marginLeft = -CHAR_RADIUS/2 + \"px\";\n                newPlayer.style.marginTop = -CHAR_RADIUS/2 + \"px\";\n                newPlayer.style.zIndex = 5;\n\n                let playerEmote = document.createElement(\"h4\");\n                playerEmote.className = \"emote\";\n                playerEmote.style.color = \"white\";\n                playerEmote.style.marginLeft = -CHAR_RADIUS/2 + \"px\";\n                playerEmote.style.marginTop = -2.5*CHAR_RADIUS + \"px\";\n\n                newPlayer.appendChild(playerEmote);\n        \n                document.getElementById(\"game\").appendChild(newPlayer);\n            } else {\n                // render character depending on if it is the client's character\n                if (character.playerId == this.playerId) {\n                    updateClientCharacter(document.getElementById(this.playerId), character);\n                } else {\n                    updateOtherCharacters(document.getElementById(character.playerId), character,document.getElementById(this.playerId), clientPlayer);\n                }\n            }\n        }\n\n        //render each flag\n        for (const flag of flags) {\n            // if not on DOM yet, create the flag\n            if (!document.getElementById(flag.id)) {\n                let newFlag = document.createElement(\"div\");\n                newFlag.id = flag.id;\n                newFlag.className = \"flag\";\n                newFlag.style.height = FLAG_RADIUS + \"px\";\n                newFlag.style.width = FLAG_RADIUS + \"px\";\n                newFlag.style.borderRadius = \"50%\";\n                newFlag.style.background = flag.color;\n                newFlag.style.position = \"absolute\";\n                newFlag.style.marginLeft = -FLAG_RADIUS/2 + \"px\";\n                newFlag.style.marginTop = -FLAG_RADIUS/2 + \"px\";\n\n                let flagText = document.createElement(\"h3\");\n                flagText.innerText = \"P\";\n                flagText.color = \"black\";\n                flagText.marginLeft = \"5px\";\n                flagText.marginTop = \"-5px\";\n\n                newFlag.appendChild(flagText);\n\n                document.getElementById(\"game\").appendChild(newFlag);\n\n            } else {\n                updateFlag(document.getElementById(flag.id),flag,document.getElementById(this.playerId),clientPlayer);\n            }\n        }\n    }\n}\n"],"file":"Game.js"}